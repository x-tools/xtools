{% import 'macros/wiki.html.twig' as wiki %}
== [[User:{{ user.username }}]] ==

{% set link %}[{{ url('PagesResult', {'project': project.domain, 'username': user.usernameIdent, 'namespace': pages.namespace, 'redirects': pages.redirects, 'deleted': pages.deleted, 'start': pages.startDate, 'end': pages.endDate}) }} {{ msg('xtools-title') }}]{% endset %}
{{ msg('xtools-advert', [link, date()|date_format]) }}
{% if pages.getNumPages == 0 %}
{{ msg('no-result', [user.username]) }}
{% else %}
{% for ns in pages.results|keys %}

=== {{ nsName(ns, project.namespaces) }} ===

{| class="wikitable sortable"
! #
{% set columns = ['page-title', 'date', 'original-size'] %}
{% if pages.deleted != 'deleted' %}
{% set columns = columns|merge(['current-size']) %}
{% endif %}
{% if project.hasPageAssessments(ns) and pages.deleted != 'deleted' %}
{% set columns = columns|merge(['assessment']) %}
{% endif %}
{% if project.isPrpPage(ns) %}
{% set columns = columns|merge(['proofreadpage-quality']) %}
{% set qualityNames = project.prpQualityNames %}
{% endif %}
{% for thKey in columns %}
! {{ msg(thKey)|ucfirst }}
{% endfor %}
! {{ msg('links') }}
{% set index = 0 %}
{% for page in pages.results[ns] %}
{% set index = index + 1 %}
{% set pageTitle = titleWithNs(page.page_title, ns, project.namespaces) %}
|-
| {{ index|num_format }}
| {% if page.redirect %}[{{ wiki.pageUrlRaw(pageTitle, project, 'redirect=no') }} {{ pageTitle }}] &middot; ({{ msg('redirect') }}){% else %}[[:{{ pageTitle }}]]{% endif %}{% if page.deleted %} &middot; ({{ msg('deleted') }}){% if page.recreated is defined and page.recreated %} &middot; ({{ msg('recreated') }}){% endif %}{% endif %}

| {% if page.deleted %}[{{ wiki.pageUrlRaw('Special:Undelete/' ~ pageTitle, project, 'timestamp=' ~ page.timestamp) }} {{ page.timestamp|date_format }}]{% else %}[[Special:PermaLink/{{ page.rev_id }}|{{ page.timestamp|date_format }}]]{% endif %}

| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ page.rev_length }}}}
{% if pages.deleted != 'deleted' %}
| {% if page.length is null %}{{ msg('na') }}{% else %}{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ page.length }}}}{% endif %}

{% if project.hasPageAssessments(ns) %}
| {% if page.assessment is defined %}
[[File:{{ project.pageAssessments.badgeURL(page.assessment.class, true) }}|20px]] {{ page.assessment.class ? page.assessment.class : msg('unknown') }}
{% endif %}
{% endif %}
{% if page.prp_quality is defined %}
| {{ qualityNames[page.prp_quality] }}
{% endif %}
{% endif %}
| [{{ wiki.pageLogUrlRaw(pageTitle, project) }} {{ msg('log') }}]{% if not(page.deleted) %} &middot; [{{ wiki.pageHistUrlRaw(pageTitle, project) }} {{ msg('history') }}]{% if enabled('PageInfo') %} &middot; [{{ url('PageInfoResult', {'project': project.domain, 'page': pageTitle}) }} {{ msg('tool-pageinfo') }}]{% endif %}{% if enabled('TopEdits') %} &middot; [{{ url('topedits', {'project': project.domain, 'username': user.usernameIdent, 'namespace': ns, 'page': page.page_title}) }} {{ msg('tool-topedits') }}]{% endif %}{% if isWMF() %} &middot; [https://pageviews.wmcloud.org/?project={{ project.domain }}&amp;pages={{ pageTitle|e('url') }} {{ msg('pageviews') }}]{% endif %}{% endif %}

{% endfor %}
{% if pages.multiNamespace and pages.counts[ns].count > pages.resultsPerPage %}
|-
|
| colspan={{ columns|length + 1 }} | [{{ url('PagesResult', {'project': project.domain, 'username': user.usernameIdent, 'namespace': ns, 'redirects': pages.redirects}) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ (pages.counts[ns].count - pages.resultsPerPage) }}}} {{ msg('num-others', [pages.counts[ns].count - pages.resultsPerPage]) }}]
{% endif %}
|}
{% endfor %}
{% endif %}
