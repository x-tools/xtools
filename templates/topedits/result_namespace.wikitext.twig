{% import 'macros/wiki.html.twig' as wiki %}
{% if not is_sub_request %}
== {{ wiki.userLinkWikitext(project, user, user.username) }} ==

{% set link %}[{{ url('TopEditsResultNamespace', {'username': user.usernameIdent, 'project': project.domain, 'namespace': 'all'}) }} {{ msg('xtools-title') }}]{% endset %}
{{ msg('xtools-advert', [link, date()|date('Y-m-d H:i')]) }}

{% endif %}
{% if not(project.userHasOptedIn(user)) %}
{{ wiki.userOptedOutWikitext(project, user) }}
{% else %}
=== {{ msg('topedits-per-namespace') }} ===

{% for ns, pages in te.topEdits %}
==== {{ nsName(ns, project.namespaces) }} ====

{% set showPageAssessment = ns == 0 and project.hasPageAssessments %}
{% set showProofreadQuality = project.hasProofreadPage and project.isPrpPage(ns) %}
{{ te.numPagesNamespace(ns) }} {{ msg('pages')|lower }}.
{| class="wikitable sortable"
! {{ msg('edits')|ucfirst }}
! {{ msg('page-title') }}
{% if showPageAssessment %}
! {{ msg('assessment') }}
{% endif %}
{% if showProofreadQuality %}
! {{ msg('proofreadpage-quality') }}{% set qualityNames = project.prpQualityNames %}
{% endif %}
! {{ msg('links') }}
{% for page in pages %}
|-
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ page.count }}}}
| [[:{{ page.full_page_title|replace({'_': ' '}) }}]]
{% if showPageAssessment %}
| {% set badge = project.pageAssessments.badgeURL(page.assessment.class, true) -%}
{% if badge is defined %}
[[File:{{ badge }}|20px]] {{ page.assessment.class ? page.assessment.class : msg('unknown') }}
{% endif %}{% endif %}
{% if showProofreadQuality %}
| {{ qualityNames[page.prp_quality] }}
{% endif %}
| [{% verbatim %}{{{% endverbatim %}fullurl:Special:Log|page={{ page.full_page_title|replace({' ': '_'}) }}}} {{ msg('log') }}] &middot; [{{ url('PageInfoResult', {project:project.domain, page:page.full_page_title}) }} {{ msg('tool-pageinfo') }}] &middot; [{{ url('TopEditsResultPage', {project:project.domain, username:user.usernameIdent, namespace:page.namespace, page:page.page_title}) }} {{ msg('tool-topedits') }}]
{% endfor %}
{% if pages|length >= 10 and te.topEdits|length > 1 %}
|-
! colspan={{ showPageAssessment ? 4 : 3 }} | [{{ url('TopEditsResultNamespace', {project:project.domain, username:user.usernameIdent, namespace:ns}) }} {{ msg('more') }}&hellip;]
{% endif %}
|}
{% if showPageAssessment %}
{% set totals = te.projectTotals(ns) %}
{% if totals|keys|length > 0 %}
{| class="wikitable sortable"
|+ {{ msg('top-wikiprojects') }}
! {{ msg('wikiproject') }} !! {{ msg('count') }}
{% for wikiproject, count in totals %}
|-
| {{ wikiproject }} || {{ count|num_format }}
{% endfor %}
|}
{% endif %}
{% endif %}
{% endfor %}
{% endif %}
