{% import 'macros/wiki.html.twig' as wiki %}
{% if not is_sub_request %}
== {{ wiki.userLinkWikitext(project, user, user.username) }} ==

{% set link %}[{{ url('EditCounterGeneralStats', {'username': user.usernameIdent, 'project': project.domain}) }} {{ msg('xtools-title') }}]{% endset %}
{{ msg('xtools-advert', [link, date()|date_format]) }}
{% endif %}

=== {{ msg('general-stats') }} ===

{| class="wikitable sortable"
{% if not(user.isIP(project)) %}
| {{ msg('user-id') }}
| {{ user.id(project) }}
{% set regDate = user.registrationDate(project) %}
{% if regDate is not empty %}
|-
| {{ msg('registration-date') }}
| {{ regDate|date_format }}
{% endif %}
|-
| {{ msg('user-groups') }}
| {% for group in ec.userRights.rightsStates.local.current %}{{ ec.userRights.rightsName(group) }}{% if not loop.last %}, {% endif %}{% endfor %}

{% if ec.userRights.rightsStates.global.current %}
|-
| {{ msg('global-user-groups') }}
| {% for group in ec.userRights.rightsStates.global.current %}{{ ec.userRights.rightsNames[group] }}{% if not loop.last %}, {% endif %}{% endfor %}

{% endif %}
{% if not(user.isTemp(project)) %}
|-
| {{ msg('is-admin') }}
| {% if user.isAdmin(project) %}{{ msg('yes') }}{% else %}{{ msg('no') }}{% endif %}
{% endif %}
{% endif %}
{% if ec.firstAndLatestActions.rev_first is defined %}{% set latestAction = ec.firstAndLatestActions.log_latest %}

|-
| {{ msg('first-edit') }}{% set firstEdit = ec.firstAndLatestActions.rev_first %}

| [[Special:Diff/{{ firstEdit.id }}|{{ firstEdit.timestamp|date_format }}]]
|-
| {{ msg('latest-edit') }}{% set lastEdit = ec.firstAndLatestActions.rev_latest %}

| [[Special:Diff/{{ lastEdit.id }}|{{ lastEdit.timestamp|date_format }}]]
{% endif %}
{% if ec.firstAndLatestActions.log_latest is defined %}
|-
| {{ msg('latest-action') }}
| [[Special:Log/redirect/logid/{{ latestAction.id }}|{{ latestAction.timestamp|date_format }}]]
{% endif %}{% if ec.thanksReceived > 0 %}
|-
| {{ msg('thanks-received') }}
| [{{ wiki.pageLogLinkRaw('User:' ~ user.username, project, null, 'thanks', true) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.thanksReceived }}}}]{% endif %}

|-
| {{ msg('live-edits') }}
| [[Special:Contributions/{{user.username}}|{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ec.countLiveRevisions}}}}]] {% if ec.countAllRevisions %}({{ ((ec.countLiveRevisions / ec.countAllRevisions) * 100)|percent_format }}){% endif %}

{% if not(user.isIpRange) %}
|-
| {{ msg('deleted-edits') }}
| [[Special:DeletedContributions/{{user.username}}|{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ec.countDeletedRevisions}}}}]] {% if ec.countAllRevisions %}({{ ((ec.countDeletedRevisions / ec.countAllRevisions) * 100)|percent_format }}){% endif %}

|-
| {{ msg('total-edits') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countAllRevisions }}}}
{% endif %}
|-
| {{ msg('last-day') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countRevisionsInLast('day') }}}}
|-
| {{ msg('last-week') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countRevisionsInLast('week') }}}}
|-
| {{ msg('last-month') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countRevisionsInLast('month') }}}}
|-
| {{ msg('last-year') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countRevisionsInLast('year') }}}}
|-
| {{ msg('average-edits-per-day', [msg('days', [1])]) }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.averageRevisionsPerDay|round(3) }}}} ({% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.days }}}} {{ msg('num-days', [ec.days]) }})
|-
| {{ msg('average-edit-size') }}*
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.averageEditSize|round(1) }}}} {{ msg('num-bytes', [ec.averageEditSize]) }}
|-
| {{ msg('minor-edits') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countMinorRevisions }}}}{% if ec.countLiveRevisions %} ({{ ((ec.countMinorRevisions / ec.countLiveRevisions) * 100)|percent_format }})
{% endif %}
|-
| {{ msg('auto-edits-tagged') }}*
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countAutoEdits }}}}{% if ec.countLast5000 %} ({{ ((ec.countAutoEdits / ec.countLast5000) * 100)|percent_format }})
{% endif %}
|-
| {{ msg('small-edits') }}*
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countSmallEdits }}}}{% if ec.countLast5000 %} ({{ ((ec.countSmallEdits / ec.countLast5000) * 100)|percent_format }})
{% endif %}
|-
| {{ msg('large-edits') }}*
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countLargeEdits }}}}{% if ec.countLast5000 %} ({{ ((ec.countLargeEdits / ec.countLast5000) * 100)|percent_format }})
{% endif %}
|}

{# ======================== PAGES ======================== #}
=== {{ msg('pages') }} ===

{| class="wikitable sortable"
| {{ msg('pages-edited-total') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countAllPagesEdited}}}}
|-
| {{ msg('average-per-page') }}
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.averageRevisionsPerPage|round(3) }}}}
|-
| {{ msg('pages-created') }}
| [{{ url('PagesResult', {project:project.domain, username:user.usernameIdent, namespace:'all', redirects:'noredirects'}) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesCreated }}}}] ({{ msg('pages-created-since-deleted', [ec.countPagesCreatedDeleted]) }})
|-
| {{ msg('pages-moved') }}
| [[Special:Log/move/{{ user.username }}|{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesMoved }}}}]]
|-
|}

{# ======================== FILES ======================== #}{% if not(user.isIpRange) %}
=== {{ msg('files') }} ===

{| class="wikitable sortable"
| {{ msg('files-uploaded') }}
| [{{ wiki.pageUrlRaw('Special:Log/upload/' ~ user.username, project, 'subtype=upload') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countFilesUploaded }}}}]
{% if isWMF() and project.domain != 'commons.wikimedia.org' %}
|-
| {{ msg('files-uploaded-commons') }}
| [https://commons.wikimedia.org/wiki/Special:Log?type=upload&subtype=upload&user={{ user.username|e('url') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countFilesUploadedCommons }}}}]
{% endif %}
|-
|}

{% endif %}

{# ======================== ACTIONS ======================== #}
{% if not(user.isAnon(project)) %}
=== {{ msg('actions') }} ===

{| class="wikitable sortable"
| {{ msg('thank') }}
| [[Special:Log/thanks/{{ user.username }}|{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.thanks }}}}]]
|-
| {{ msg('approve') }}
| [{{ wiki.pageUrlRaw('Special:Log/review/' ~ user.username, project, '&subtype=accept') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.approvals }}}}]
{% if project.hasPageTriage %}
|-
| {{ msg('page-curation') }}
| [{{ wiki.pageUrlRaw('Special:Log/pagetriage-curation/' ~ user.username, project, '&subtype=review') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.reviews }}}}]
{% endif %}
|-
| {{ msg('patrol') }}
| [[Special:Log/patrol/{{ user.username }}|{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.patrols }}}}]]
|-
| {{ msg('accounts-created') }}
| [[Special:Log/newusers/{{ user.username }}|{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.accountsCreated }}}}]]
|-
|}

{% if user.isAdmin(project) %}
==== {{ msg('actions-as-admin') }} ====

{| class="wikitable sortable"
|-
| {{ msg('block') }}
| [{{ wiki.pageUrlRaw('Special:Log/block/' ~ user.username, project, 'subtype=block') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countBlocksSet }}}}]
|-
| {{ msg('reblock') }}
| [{{ wiki.pageUrlRaw('Special:Log/block/' ~ user.username, project, 'subtype=reblock') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countReblocksSet }}}}]
|-
| {{ msg('unblock') }}
| [{{ wiki.pageUrlRaw('Special:Log/block/' ~ user.username, project, 'subtype=unblock') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countUnblocksSet }}}}]
|-
| {{ msg('protect') }}
| [{{ wiki.pageUrlRaw('Special:Log/protect/' ~ user.username, project, 'subtype=protect') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesProtected }}}}]
|-
| {{ msg('reprotect') }}
| [{{ wiki.pageUrlRaw('Special:Log/protect/' ~ user.username, project, 'subtype=modify') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesReprotected }}}}]
|-
| {{ msg('unprotect') }}
| [{{ wiki.pageUrlRaw('Special:Log/protect/' ~ user.username, project, 'subtype=unprotect') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesUnprotected }}}}]
|-
| {{ msg('delete') }}
| [{{ wiki.pageUrlRaw('Special:Log/delete/' ~ user.username, project, 'subtype=delete') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesDeleted }}}}]
|-
| {{ msg('revision-delete') }}
| [{{ wiki.pageUrlRaw('Special:Log/delete/' ~ user.username, project, 'subtype=revision') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countEditsDeleted }}}}]
|-
| {{ msg('restore') }}
| [{{ wiki.pageUrlRaw('Special:Log/delete/' ~ user.username, project, 'subtype=restore') }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesRestored }}}}]
|-
| {{ msg('rights') }}
| [{{ wiki.pageUrlRaw('Special:Log/rights/' ~ user.username, project) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countRightsModified }}}}]
|-
| {{ msg('merge') }}
| [{{ wiki.pageUrlRaw('Special:Log/merge/' ~ user.username, project) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.merges }}}}]
|-
| {{ msg('import') }}
| [{{ wiki.pageUrlRaw('Special:Log/import/' ~ user.username, project) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countPagesImported }}}}]
|-
{% if isWMF() %}
| {{ msg('abusefilter') }}
| [{{ wiki.pageUrlRaw('Special:Log/abusefilter/' ~ user.username, project) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countAbuseFilterChanges }}}}]
|-
{% endif %}
| {{ msg('contentmodel') }}
| [[Special:Log/contentmodel/{{ user.username }}|{% verbatim %}{{FORMATNUM:{% endverbatim %}{{ ec.countContentModelChanges }}}}]]
|-
|}

{% endif %}{% endif %}
{# ======================== BLOCKS ======================== #}
=== {{ msg('re-blocks') }} ===

{| class="wikitable sortable"
| {{ msg('block-longest') }}
| {% if ec.longestBlockSeconds == -1 %}&#x221e; {# infinity #}{% elseif ec.longestBlockSeconds == false %}&ndash;{% else %}{{ formatDuration(ec.longestBlockSeconds) }}{% endif %}

|-
| {{ msg('block-current-count') }}
| {% if user.isBlocked(project) %}[[Special:BlockList/{{ user.username }}|{{ user.countActiveBlocks(project, user)|num_format }}]]
{% else %}&ndash;
{% endif %}
|-
|}

{% if not(user.isIP) %}
{# ======================== GLOBAL EDITS ======================== #}
=== {{ msg('top-projects-edit-counts') ~ ' (' ~ msg('approximate')|lower ~ ')' }} ===

{| class="wikitable sortable"
|-
{% set topN = 10 %}
{% for topProj in gc.globalEditCountsTopN(topN) %}{% apply spaceless %}
| {% if topProj.project.databaseName == project.databaseName %}&#9658;{% endif %}
{# use project.domain instead of title due to limited space available in the interface #}
[{{ wiki.pageUrlRaw('Special:Contributions/'~user.username, topProj.project) }} {{ topProj.project.domain }}]
| [{{ url('TopEditsResultNamespace', {project:topProj.project.domain, username:user.usernameIdent, namespace:'all'}) }} {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ topProj.total }}}}]
{% endapply %}

|-
{% endfor %}
|}
{% endif %}

<nowiki>*</nowiki> {{ msg('data-limit', [5000, 5000|num_format]) }}
