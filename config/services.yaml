# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html

imports:
    - { resource: tools.yaml }
    - { resource: table_map.yaml, ignore_errors: true }
    - { resource: project_map.yaml, ignore_errors: true }
    - { resource: assessments.yaml }
    - { resource: quote.yaml }
    - { resource: request_denylist.yaml, ignore_errors: true }
    - { resource: admin_stats.yaml }
    - { resource: user_group_icons.yaml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.version: '%env(APP_VERSION)%'
    locale: 'en'
    wiki_url: '%env(WIKI_URL)%'
    default_project: '%env(DEFAULT_PROJECT)%'
    app.single_wiki: '%env(bool:APP_SINGLE_WIKI)%'
    app.is_wmf: '%env(bool:APP_IS_WMF)%'
    app.max_page_revisions: '%env(int:APP_MAX_PAGE_REVISIONS)%'
    app.max_user_edits: '%env(int:APP_MAX_USER_EDITS)%'
    app.num_edits_requiring_login: '%env(int:APP_USER_EDITS_LOGIN)%'
    app.replag_threshold: '%env(int:APP_REPLAG_THRESHOLD)%'
    enable.AdminScore: '%env(bool:APP_ENABLE_ADMINSCORE)%'
    enable.AdminStats: '%env(bool:APP_ENABLE_ADMINSTATS)%'
    enable.Authorship: '%env(bool:APP_ENABLE_AUTHORSHIP)%'
    enable.AutoEdits: '%env(bool:APP_ENABLE_AUTOEDITS)%'
    enable.Blame: '%env(bool:APP_ENABLE_BLAME)%'
    enable.CategoryEdits: '%env(bool:APP_ENABLE_CATEGORYEDITS)%'
    enable.EditCounter: '%env(bool:APP_ENABLE_EDITCOUNTER)%'
    enable.EditSummary: '%env(bool:APP_ENABLE_EDITSUMMARY)%'
    enable.GlobalContribs: '%env(bool:APP_ENABLE_GLOBALCONTRIBS)'
    enable.LargestPages: '%env(bool:APP_ENABLE_LARGESTPAGES)'
    enable.Meta: '%env(bool:APP_ENABLE_META)%'
    enable.PageInfo: '%env(bool:APP_ENABLE_PAGEINFO)%'
    enable.Pages: '%env(bool:APP_ENABLE_PAGES)%'
    enable.Quote: '%env(bool:APP_ENABLE_QUOTE)%'
    enable.SimpleEditCounter: '%env(bool:APP_ENABLE_SIMPLEEDITCOUNTER)%'
    enable.TopEdits: '%env(bool:APP_ENABLE_TOPEDITS)%'
    oauth_key: '%env(OAUTH_KEY)%'
    oauth_secret: '%env(OAUTH_SECRET)%'
    mailer.to_email: '%env(MAILER_TO_EMAIL)%'

services:
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        bind:
            $apiPath: '%env(API_PATH)%'
            $centralAuthProject: '%env(CENTRAL_AUTH_PROJECT)%'
            $defaultProject: '%env(DEFAULT_PROJECT)%'
            $environment: '%env(APP_ENV)%'
            $isWMF: '%env(bool:APP_IS_WMF)%'
            $optedIn: '%env(csv:OPTED_IN)%'
            $projectDir: '%kernel.project_dir%'
            $queryTimeout: '%env(APP_QUERY_TIMEOUT)%'
            $replagThreshold: '%env(int:APP_REPLAG_THRESHOLD)%'
            $singleWiki: '%env(bool:APP_SINGLE_WIKI)%'

    # Makes classes in src/App available to be used as services.
    # This creates a service per class whose id is the fully-qualified class name.
    App\:
         resource: '../src/*'
         # you can exclude directories or files
         # but if a service is unused, it's removed anyway
         exclude:
            - '../src/Kernel.php'
            - '../migrations/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Repository\:
        resource: '../src/Repository'

    App\Twig\:
        resource: '../src/Twig'

    App\Monolog\WebProcessorMonolog:
        arguments: ['@request_stack']
        tags:
            - { name: monolog.processor }

    App\EventSubscriber\RateLimitSubscriber:
        arguments:
            $rateLimit: '%env(int:APP_RATE_LIMIT_COUNT)%'
            $rateDuration: '%env(int:APP_RATE_LIMIT_TIME)%'

    GuzzleHttp\Client:
        alias: 'eight_points_guzzle.client.xtools'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - 'mysql:dbname=%env(DATABASE_NAME)%; host=%env(DATABASE_HOST)%; port=%env(DATABASE_PORT)%'
            - { db_username: '%env(DATABASE_USER)%', db_password: '%env(DATABASE_PASSWORD)%' }

    # These need to not be public, but they are, for now...
    app.automated_edits_helper:
        class: App\Helper\AutomatedEditsHelper
        arguments: ['@request_stack', '@cache.app', 'eight_points_guzzle.client.xtools']
        public: true
    app.i18n_helper:
        class: App\Helper\I18nHelper
        arguments: ['@request_stack']
        public: true

    app.exception_listener:
        class: App\EventSubscriber\ExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    # add more services, or override services that need manual wiring
    # App\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
